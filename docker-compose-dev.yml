# This extends the _local file, run with:
#   `docker-compose -p rmdev -f docker-compose-local.yml -f docker-compose-dev.yml up -d`
version: '3.7'
services:
  rmapi:
    image: pvarki/rmapi:devel_shell
    build:
      context: ./api
      dockerfile: Dockerfile
      target: devel_shell
    command: ["-c", "source /root/.profile  && poetry install && uvicorn --host 0.0.0.0 --port 8000 --log-level debug --factory rasenmaeher_api.web.application:get_app --reload"]
    volumes:
      - "./api:/app"

  rmuidev:
    image: pvarki/rmui:devel_shell
    build:
      context: ./ui
      dockerfile: Dockerfile
      target: devel_shell
    command: ["-c", "npm install && npm run dev -- --port 8002 --host 0.0.0.0"]
    volumes:
      - "./ui:/app"
    environment:
      SERVER_DOMAIN: ${SERVER_DOMAIN:-localmaeher.pvarki.fi}
      API_PORT: ${NGINX_HTTPS_PORT:-4439}
    networks:
      - intranet
    ports:  # REMINDER Do not expose these in production
      - "${NGINX_UI_UPSTREAM_PORT:-8002}:${NGINX_UI_UPSTREAM_PORT:-8002}"
    healthcheck:
      test: 'true'  # FIXME
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s

  rmnginx:  # need to load different templates for uidev
    image: nginx
    environment:
      NGINX_UI_UPSTREAM: "rmuidev"
      NGINX_UI_UPSTREAM_PORT: ${NGINX_UI_UPSTREAM_PORT:-8002}
      NGINX_ENVSUBST_TEMPLATE_DIR: /templates_uidev
    volumes:
      - ./nginx/templates_rasenmaeher_uidev:/templates_uidev
    depends_on:
      rmapi:
        condition: service_healthy
      rmuidev:
        condition: service_healthy

  kwinit_prod:  # For building the go executable needed by rmfpapi
    image: pvarki/kw_product_init:latest
    build:
      context: ./kw_product_init
      dockerfile: Dockerfile
      target: production
    command: ["help"]

  rmfpapi:
    image: pvarki/rmfpapi:devel_shell
    build:
      context: ./fpintegration
      dockerfile: Dockerfile
      target: devel_shell
    command: ["-c", "source /root/.profile && /container-init.sh && poetry install && uvicorn --host 0.0.0.0 --port 8001 --log-level debug --factory rmfpapi.app:get_app --reload"]
    volumes:
      - "./fpintegration:/app"
    depends_on:
      rmnginx:
        condition: service_healthy

  fpnginx:  # apparently we have to specify these here or it tries to start too early
    image: nginx
    depends_on:
      rmfpapi:
        condition: service_healthy


  takrmapi:
    image: pvarki/takrmapi:devel_shell
    build:
      context: ./takintegration
      dockerfile: Dockerfile
      target: integ_devel_shell
    command: ["-c", "source /root/.profile && /container-init.sh && poetry install && uvicorn --host 0.0.0.0 --port 8003 --log-level debug --factory takrmapi.app:get_app --reload"]
    environment:
      LOG_LEVEL: 10
    volumes:
      - "./takintegration:/app"
    depends_on:
      rmnginx:
        condition: service_healthy

  taknginx:  # apparently we have to specify these here or it tries to start too early
    image: nginx
    depends_on:
      takrmapi:
        condition: service_healthy


  kwinit:  # docker-compose -p rmdev -f docker-compose-local.yml -f docker-compose-dev.yml exec kwinit zsh
    image: pvarki/kw_product_init:devel_shell
    build:
      context: ./kw_product_init
      dockerfile: Dockerfile
      target: devel_shell
    stdin_open: true
    tty: true
    command: []
    volumes:
      - "./kw_product_init:/app"
    depends_on:
      rmapi:
        condition: service_healthy
    profiles: ["kwinit_dev"]


networks:
  intranet:
